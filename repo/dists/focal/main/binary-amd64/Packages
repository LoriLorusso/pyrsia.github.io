Package: pyrsia
Version: 0.1.0+1090
Architecture: amd64
Vcs-Browser: https://github.com/pyrsia/pyrsia
Vcs-Git: https://github.com/pyrsia/pyrsia
Maintainer: pyrsiaoss <pyrsiaopensource@gmail.com>
Installed-Size: 18310
Depends: openssl
Priority: optional
Section: devel
Filename: pool/main/p/pyrsia/pyrsia_0.1.0+1090_amd64.deb
Size: 5472472
SHA256: 27643a3df2763d1e5fa7faa9fb3bdb6fc3fb9516b74b2d527a2ffbad77556f24
SHA1: c1fd8ec0ef376ba4d5f4835ba08965fac52dca06
MD5sum: c8ee2ec323a791136753cc434a91865b
Description: Prysia Node and CLI
 ![logo](https://raw.githubusercontent.com/pyrsia/.github/main/images/logo-color.svg)
 .
 > Zero-Trust Decentralized Package Network
 .
 ## Current Development Phase
 .
 _üì¢ We are looking for your feedback!_
 .
 This project is currently in the "sandbox" üèñÔ∏è. We are actively exploring
 new concepts and tools.
 The code, workflows, and ideas are subject to breaking changes at any time in
 this early stage of development.
 .
 ### Primary Focus
 .
 To get off the ground the focus is strictly on the peer-to-peer distribution of
 Docker images backed by a blockchain of identifiers.
 .
 ## Looking to Contribute?
 .
 Take a moment to review our [contributing
 guidelines](https://github.com/pyrsia/.github/blob/main/contributing.md).
 You can join our community on
 [Slack](https://openssf.slack.com/archives/C02RC7Y5EUV) or participate in a
 [meeting](https://pyrsia.io/events/) to pick up an issue. We also have our
 [Local Setup Guide](docs/local_dev_setup.md) to help.
 .
 ## Install Pyrsia and Joining the Network
 .
 There's a web script that will set everything up.
 .
 ```sh
 curl -sS https://pyrsia.io/install.sh | sh
 ```
 .
 For more options and information, checkout our [online
 tutorial](https://pyrsia.io/guides/userguide/installation-and-support/ubuntu-installation/)
 .
 ### Downloading Your First Artifact
 .
 Let's exercies the [Docker](https://www.docker.com/) and
 [DockerHub](https://hub.docker.com/) integration.
 .
 ```sh
 docker pull ubuntu
 ```
 .
 ### Node and CLI
 .
 There are two components of this project
 .
 - **[CLI](pyrsia_cli/)**: A basic interface which communicates with a node.
 - **[Node](pyrsia_node/)**: An instance of the Pyrsia daemon which can
 participate in the network with other nodes.
 .
 ### Connecting with other Nodes
 .
 The Pyrsia node will always join the "main net" and connect with other peers.
 You can see this using the CLI's "status" command:
 .
 ```sh
 $ ./pyrsia node -s
 Connected Peers Count:   17 # Shows the number of visible peers
 Artifacts Count:         12 # Total number of artifacts cached locally
 Total Disk Available:    983112
 ```

Package: synapse-bt
Version: 1.0.0+857
Architecture: amd64
Vcs-Browser: https://github.com/pyrsia/synapse
Vcs-Git: https://github.com/pyrsia/synapse
Maintainer: Luminarys <postmaster@gensok.io>
Installed-Size: 10601
Depends: libc6 (>= 2.29), libc6 (>= 2.18)
Priority: optional
Section: devel
Filename: pool/main/s/synapse-bt/synapse-bt_1.0.0+857_amd64.deb
Size: 2425612
SHA256: 4fbc406188e98ef1adc73ca9a697eba170c770a711895119b67bcd527d36e9fc
SHA1: 3b3ab16eaa2198d9bf4625b4cc87fcc8051d1381
MD5sum: c50c413b7f29cc9f6b1e1c879a8fe8ef
Description: Synapse BitTorrent client
 # synapse
 [![Rust
 Build](https://github.com/Luminarys/synapse/actions/workflows/rust.yml/badge.svg)](https://github.com/Luminarys/synapse/actions/workflows/rust.yml)
 .
 .
 Synapse is a flexible and fast BitTorrent daemon.
 .
 It currently supports most systems which implement epoll or kqueue, with a
 focus on 64-bit linux servers.
 .
 ## About
 * Event based RPC using websockets
 * HTTP downloads and TLS for easy server usage
 * Can be used via web client with minimal setup - see
 [receptor](https://web.synapse-bt.org)
 * See [this wiki
 page](https://github.com/Luminarys/synapse/wiki/Feature-Stability) for an
 overview of stability
 .
 ## Installation
 ### Package
 A list of packages can be found on [this wiki
 page](https://github.com/Luminarys/synapse/wiki/Third-party-packages).
 .
 ### Compiling
 Install dependencies:
 .
 - rustc >= 1.39.0
 - cargo >= 0.18
 - gcc | clang
 .
 Synapse and sycli can be installed with:
 ```
 cargo build --release --all
 cargo install
 cargo install --path ./sycli/
 ```
 .
 If you'd just like to install sycli:
 ```
 cargo build --release -p sycli
 cargo install --path ./sycli/
 ```
 .
 ## Configuration
 Synapse expects its configuration file to be present at
 `$XDG_CONFIG_DIR/synapse.toml`,
 or `~/.config/synapse.toml`.
 If it is not present or invalid, a default configuration will be used.
 These defaults are given in `example_config.toml`.
 .
 Sycli can be configured in a similar manner, using `sycli.toml`.
 .
 ### Desktop application
 .
 Copy [`share/synapse/applications/synapse.desktop`] to
 `$XDG_DATA_HOME/applications` or `~/.local/share/applications`.
 .
 [`share/synapse/applications/synapse.desktop`]:
 share/synapse/applications/synapse.desktop
 .
 [XDG MIME Applications] example configuration:
 .
 `~/.config/mimeapps.list`
 .
 ``` ini
 [Default Applications]
 x-scheme-handler/magnet=synapse.desktop
 ```
 .
 [XDG MIME Applications]:
 https://wiki.archlinux.org/index.php/XDG_MIME_Applications
 .
 ## Development
 Please see [this issue](https://github.com/Luminarys/synapse/issues/1) for
 details on development status.
 If you're interested in developing a client for synapse, see `doc/RPC` for the
 current RPC spec.
 if you'd like to contribute to synapse, see `doc/HACKING`.

